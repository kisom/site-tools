#!/bin/sh
# .:[ rawk - rage against web frameworks ]:.
# 
# generates a static content from a tree of markdown files and other content
# originally written by 4096R/B7B720D6  "Kyle Isom <coder@kyleisom.net>"
# based on the suckless webframework (sw) by nibblesec
# 
# released as public domain software - for curiosity's sake, i'd be interested 
# in hearing if you take this and tinker with it, though you are far from 
# obligated to do so.

CONF_FILE="rawkrc"
SRC_DIR="$1"

usage () {
    echo "usage: $0 <source dir>"
    #exit 0
}

rawk_header () {
    PAGE_TITLE="$(basename $1 | sed -e 's/^\(..*\)\...*$/\1/')" # get pagename
    if [ -n "$STYLESHEET" ]; then
        echo "read stylesheet '$STYLESHEET'"
        CSS_DATA="$(cat $STYLESHEET)"
    fi

    # sedden death
    echo $(cat ${HDR_TPL} | sed -e "s/\${TITLE}/$SITE_TITLE/g"              \
                                -e "s/\${SUBTITLE}/$SITE_SUBTITLE/"         \
				-e "s/\${STYLE}/$CSS_DATA/"                 \
                                -e "s|\${ROOT_LINK}|$(dirname $1)/index.html|" 
    )
}

rawk_submenu () {
    FC="| grep -v ^$1\$"    # filter chain
    FILE_LIST=""
    echo "<div id=\"side-bar\">"

    for filter in $BL
    do
        FC="$FC | grep -v '$filter'"
    done

    FILE_LIST=$(eval ls -1 $(dirname $CUR) $FC | sort | xargs)
    for FILE in $FILE_LIST
    do
        echo -n "<a href=\"$(basename $FILE)\">"
        echo -n "$(basename $FILE | sed -e 's/(..*)\.[[:alnum:]]\+/\1/')"
        echo "</a> "
    done
}

rawk_page () {
    # clear out vars
    PAGE=""
    FOOTER=""

    rawk_header $1
    rawk_submenu $1
    
    $MDPARSER $1

    rawk_footer $1
}

rawk_main () {
    # check to see which arguments we got
    # if we got any, rename them for clarity
    if [ -n "$1" ]; then
        SRC_DIR="$1"
    fi

    if [ -n "$2" ]; then 
        TARGET="$2"
    fi

    # at a minimum, require a source directory
    if [ -z "${SRC_DIR}" ]; then
        usage
    elif [ -z "${TARGET}" ]; then
        # sane default
        TARGET="$(pwd)/$(basename ${SRC_DIR}).build"
    fi

    echo "SRC: $SRC_DIR"
    echo "TGT: $TARGET"
    return 0
    # copy over target dir
    cp -r ${SRC_DIR} ${TARGET}
    cd ${TARGET}

    # here's where we need to load in the list of files
    # and convert md->html
    for SRC_F in $(find ${TARGET} -iname \*.md -print | xargs)

    do
        OUT_F="$(echo $SRC_F | sed -e 's/([[:alnum:]]{1,})\.[mM][dD]/\1/').html"
        rawk_page $SRC_F > $OUT_F
    done

}

# source config file and check valid targets and source dirs
. ./$CONF_FILE
START="$(pwd)"
HDR_TPL="$(pwd)/$HDR_TPL"
cd $1
for MDF in $(find ./ -iname \*.md -print | xargs)
do
    echo "* $MDF"
    rawk_header $MDF
done

cd $START
#rawk_main $@
